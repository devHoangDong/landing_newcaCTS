.formContainer {
    width: 80%;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    display: table;
    color: #fff;
    background-color: rgba(90, 90, 90, 0.1);
    padding: 0rem 2rem 2rem 2rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    &__title {
        width: 100%;
        font: bold 1.25rem 'GSB';
        text-align: left;
        padding: .5rem 0;
    }
    &__select {
        width: 100%;
        display: table-row;
    }
    &__input {
        height: 100%;
        justify-content: space-between;
        padding-top: 1rem;
        > * {
            display: flex;
            flex-flow: column-reverse;
            justify-content: flex-end;
            height: 6rem;
            p {
              color: red;
            }
            label {
                text-align: left;
                font: bold .8rem 'GSB';
                line-height: .8rem;
                margin-bottom: .5rem;
                span {
                    color: red;
                }
            }
            input {
                color: #fff !important;
                font: normal 1rem 'GSR';
                border-radius: 2rem;
                -webkit-box-shadow: none;
                box-shadow: none;
                background: transparent;
                border: 1px solid rgba(255,255,255,.3);
                padding-left: 2rem;
                padding-right: .5rem;
                padding: .375rem .75rem;
                font-weight: 400;
                line-height: 1.5rem;
                transition: border-color .15s ease-in-out , box-shadow .15s ease-in-out , -webkit-box-shadow .15s ease-in-out;
            }
            input:focus {
                color: #495057;
                background-color:rgba(255, 255, 255, 0.04);
                border-color: #80bdff;
                outline: 0;
                -webkit-box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            }
            label, input {
                transition: all 0.2s;
                touch-action: manipulation;
                padding-right: .5rem;
              }
              /**
              * Translate down and scale the label up to cover the placeholder,
              * when following an input (with placeholder-shown support).
              * Also make sure the label is only on one row, at max 2/3rds of the
              * fieldâ€”to make sure it scales properly and doesn't wrap.
              */
              input:placeholder-shown + label {
                cursor: text;
                max-width: 75%;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                transform-origin: left bottom;
                transform: translate(1rem, 2.15rem) scale(1.25);
              }
              input:focus:placeholder-shown + label {
                max-width: 100%;
              }
              /**
              * By default, the placeholder should be transparent. Also, it should 
              * inherit the transition.
              */
              input::placeholder {
                opacity: 0;
                transition: inherit;
              }
              /**
              * Show the placeholder when the input is focused.
              */
              input:focus::placeholder {
                opacity: .75;
              }
              /**
              * When the element is focused, remove the label transform.
              * Also, do this when the placeholder is _not_ shown, i.e. when 
              * there's something in the input at all.
              */
              input:not(:placeholder-shown) + label,
              input:focus + label {
                transform: translate(0, 0) scale(1);
                cursor: pointer;
                max-width: 75%;
              }
              input:focus:not(:placeholder-shown) + label {
                max-width: 100% !important;
              }
        }
        &__target, &__deviceType {
            width: calc(40% - 2rem) !important;
            > * {
                width: 100% !important;
            }
        }
      &__fileConfirm {
        position: relative;
      }
      &__date {
        > div {
          width: 100% !important;
          div {
            width: 100% !important;
            input:focus {
              outline: none !important;
            }
          span:first-child {
            color: #fff;
          }
          span:last-child {
            background-color: transparent !important;
          }
          }
        }
      }
      &__upload {
        p {
          position: absolute;
          bottom: 0;
        }
        position: relative;
        > * > div {
          float: left;
        }
      }
    }
    &__upload {
      width: 25%;
      text-align: left;
      &__label {
        padding-bottom: .5rem;
      }
      div:first-child {
        font: normal 1rem "GSR";
        span:first-child {
          color: red;
        }
      }
    }
    &__warn {
      color: red;
      font: .75rem;
      text-align: left;
      margin-top: 1rem;
    }
}
/* Extra small devices (phones, 600px and down) */
@media only screen and (max-width: 600px) {}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (max-width: 1200px) {
  .formContainer {
    &__input {
      display: table-row;
      div {
        width: 100%;
      }
    }
  }
}
@media only screen and (min-width: 1201px) {
  .formContainer {
    &__input {
      display: flex;
      flex-wrap: wrap;
      div {
        width: calc(20% - 2rem);
      }
      &__locationResident {
        width: calc(40% - 1.5rem) !important;
      }
      &__taxNum {
        width: calc(60% - 1rem) !important;
        padding-right: calc(40% + 1rem);
      }
    }
  }
}